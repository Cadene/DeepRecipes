[0m# ... lunching using pid = 27546[0m	
[0m# ... switching to CUDA[0m	
[0m# ... loading Dataset[0m	
[0m# ...reloading previously trained model[0m	
[0m# Model[0m	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> (19) -> (20) -> (21) -> (22) -> (23) -> (24) -> output]
  (1): nn.SpatialConvolutionMM(in: 3, out: 8, kW: 3, kH: 3, padding: 1)
  (2): nn.ReLU
  (3): nn.SpatialConvolutionMM(in: 8, out: 8, kW: 3, kH: 3, padding: 1)
  (4): nn.ReLU
  (5): nn.SpatialMaxPooling(kW: 2, kH: 2, dW: 2, dH: 2)
  (6): nn.SpatialConvolutionMM(in: 8, out: 16, kW: 3, kH: 3, padding: 1)
  (7): nn.ReLU
  (8): nn.SpatialConvolutionMM(in: 16, out: 16, kW: 3, kH: 3, padding: 1)
  (9): nn.ReLU
  (10): nn.SpatialMaxPooling(kW: 2, kH: 2, dW: 2, dH: 2)
  (11): nn.SpatialConvolutionMM(in: 16, out: 32, kW: 3, kH: 3, padding: 1)
  (12): nn.ReLU
  (13): nn.SpatialConvolutionMM(in: 32, out: 32, kW: 3, kH: 3, padding: 1)
  (14): nn.ReLU
  (15): nn.SpatialMaxPooling(kW: 3, kH: 3, dW: 3, dH: 3)
  (16): nn.Reshape(10368)
  (17): nn.Linear(10368 -> 2048)
  (18): nn.ReLU
  (19): nn.Dropout(0.700000)
  (20): nn.Linear(2048 -> 1024)
  (21): nn.ReLU
  (22): nn.Dropout(0.700000)
  (23): nn.Linear(1024 -> 101)
  (24): nn.LogSoftMax
}
[0mNumber of parameters 23455597[0m	
[0m# Criterion[0m	
nn.ClassNLLCriterion
[0m# ... building optimizer[0m	
[0m# ...reloading previously trained optimfunc.state[0m	
[0m# Optimizer[0m	
{
  name : [1;30m"[0m[0;32mADAGRAD[0m[1;30m"[0m
  method : [0;35mfunction: 0x41f48108[0m
  config : 
    {
      learningRate : [0;36m0.35[0m
    }
  state : {...}
}
[0m
# ... test model[0m	
[0m: 0% done [0m	[0m00:03:03 left[0m	
[0m: 5% done [0m	[0m00:01:58 left[0m	
[0m: 10% done [0m	[0m00:01:57 left[0m	
[0m: 15% done [0m	[0m00:01:53 left[0m	
[0m: 20% done [0m	[0m00:01:47 left[0m	
[0m: 25% done [0m	[0m00:01:41 left[0m	
[0m: 30% done [0m	[0m00:01:34 left[0m	
[0m: 35% done [0m	[0m00:01:28 left[0m	
[0m: 40% done [0m	[0m00:01:21 left[0m	
[0m: 45% done [0m	[0m00:01:15 left[0m	
[0m: 50% done [0m	[0m00:01:08 left[0m	
[0m: 55% done [0m	[0m00:01:01 left[0m	
[0m: 60% done [0m	[0m00:00:55 left[0m	
[0m: 65% done [0m	[0m00:00:48 left[0m	
[0m: 70% done [0m	[0m00:00:41 left[0m	
[0m: 75% done [0m	[0m00:00:35 left[0m	
[0m: 80% done [0m	[0m00:00:28 left[0m	
[0m: 85% done [0m	[0m00:00:21 left[0m	
[0m: 90% done [0m	[0m00:00:14 left[0m	
[0m: 95% done [0m	[0m00:00:07 left[0m	
[0m: 100% done [0m	[0m00:00:00 left[0m	
[0m: Time to test all samples = 00:02:18[0m	
[0m# Confusion Matrix[0m	
[0m: average row correct: 0.99009900990099%[0m	
[0m: average rowUcol correct (VOC measure): 0.010415207188908%[0m	
[0m: > global correct: 1.0519358924933%[0m	
[0m
#####################[0m	
[0m# Epoch nÂ° 1[0m	
[0m
# ... train model[0m	
[0m.:. Batch 1 to 128 on 72328 images[0m	
[0m: 1% done[0m	[0m00:22:41 left[0m	
[0m.:. Batch 3201 to 3328 on 72328 images[0m	
[0m: 6% done[0m	[0m00:21:37 left[0m	
[0m.:. Batch 6785 to 6912 on 72328 images[0m	
[0m: 11% done[0m	[0m00:20:26 left[0m	
[0m.:. Batch 10497 to 10624 on 72328 images[0m	
[0m: 16% done[0m	[0m00:19:17 left[0m	
[0m.:. Batch 14081 to 14208 on 72328 images[0m	
[0m: 21% done[0m	[0m00:18:10 left[0m	
