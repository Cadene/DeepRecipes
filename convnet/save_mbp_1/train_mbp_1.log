[0m<trainer> reloading previously trained network[0m	
[0m# Model[0m	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> (19) -> (20) -> (21) -> (22) -> (23) -> (24) -> (25) -> (26) -> output]
  (1): nn.SpatialConvolution(in: 3, out: 96, kW: 7, kH: 7, dW: 2, dH: 2)
  (2): nn.Threshold
  (3): nn.SpatialMaxPooling(kW: 3, kH: 3, dW: 3, dH: 3)
  (4): nn.SpatialConvolutionMM(in: 96, out: 256, kW: 7, kH: 7)
  (5): nn.Threshold
  (6): nn.SpatialMaxPooling(kW: 2, kH: 2, dW: 2, dH: 2)
  (7): nn.SpatialZeroPadding(l=1,r=1,t=1,b=1)
  (8): nn.SpatialConvolutionMM(in: 256, out: 512, kW: 3, kH: 3)
  (9): nn.Threshold
  (10): nn.SpatialZeroPadding(l=1,r=1,t=1,b=1)
  (11): nn.SpatialConvolutionMM(in: 512, out: 512, kW: 3, kH: 3)
  (12): nn.Threshold
  (13): nn.SpatialZeroPadding(l=1,r=1,t=1,b=1)
  (14): nn.SpatialConvolutionMM(in: 512, out: 1024, kW: 3, kH: 3)
  (15): nn.Threshold
  (16): nn.SpatialZeroPadding(l=1,r=1,t=1,b=1)
  (17): nn.SpatialConvolutionMM(in: 1024, out: 1024, kW: 3, kH: 3)
  (18): nn.Threshold
  (19): nn.SpatialMaxPooling(kW: 3, kH: 3, dW: 3, dH: 3)
  (20): nn.SpatialConvolutionMM(in: 1024, out: 4096, kW: 5, kH: 5)
  (21): nn.Threshold
  (22): nn.SpatialConvolutionMM(in: 4096, out: 4096, kW: 1, kH: 1)
  (23): nn.Threshold
  (24): nn.SpatialConvolutionMM(in: 4096, out: 2, kW: 1, kH: 1)
  (25): nn.View
  (26): nn.LogSoftMax
}
[0m# Criterion[0m	
nn.ClassNLLCriterion
[0m# Optimizer[0m	
[0mADAGRAD[0m	
[0m# OptimState[0m	
{
  learningRate : [0;36m0.0001[0m
}
[0m# Epoch nÂ° 1[0m	
[0m# Batch size 1 to 0[0m	
[0m# Time to learn 200 samples = 1436703325030.9ms[0m	
[0m# Batch size 201 to 40000[0m	
[0m# Time to learn 200 samples = 1436703477606ms[0m	
[0m# Batch size 401 to 80000[0m	
