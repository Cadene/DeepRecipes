[0m# ... lunching using pid = 16651[0m	
[0m# ... switching to CUDA[0m	
[0m# ... loading Dataset[0m	
[0m# ... building model[0m	
[0m# Model[0m	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> (19) -> (20) -> (21) -> (22) -> (23) -> (24) -> (25) -> (26) -> (27) -> (28) -> output]
  (1): nn.SpatialConvolution(in: 3, out: 96, kW: 7, kH: 7, dW: 2, dH: 2)
  (2): nn.Threshold
  (3): nn.SpatialMaxPooling(kW: 3, kH: 3, dW: 3, dH: 3)
  (4): nn.SpatialConvolutionMM(in: 96, out: 256, kW: 7, kH: 7)
  (5): nn.Threshold
  (6): nn.SpatialMaxPooling(kW: 2, kH: 2, dW: 2, dH: 2)
  (7): nn.SpatialZeroPadding(l=1,r=1,t=1,b=1)
  (8): nn.SpatialConvolutionMM(in: 256, out: 512, kW: 3, kH: 3)
  (9): nn.Threshold
  (10): nn.SpatialZeroPadding(l=1,r=1,t=1,b=1)
  (11): nn.SpatialConvolutionMM(in: 512, out: 512, kW: 3, kH: 3)
  (12): nn.Threshold
  (13): nn.SpatialZeroPadding(l=1,r=1,t=1,b=1)
  (14): nn.SpatialConvolutionMM(in: 512, out: 1024, kW: 3, kH: 3)
  (15): nn.Threshold
  (16): nn.SpatialZeroPadding(l=1,r=1,t=1,b=1)
  (17): nn.SpatialConvolutionMM(in: 1024, out: 1024, kW: 3, kH: 3)
  (18): nn.Threshold
  (19): nn.SpatialMaxPooling(kW: 3, kH: 3, dW: 3, dH: 3)
  (20): nn.SpatialConvolutionMM(in: 1024, out: 4096, kW: 5, kH: 5)
  (21): nn.Threshold
  (22): nn.Dropout(0.900000)
  (23): nn.SpatialConvolutionMM(in: 4096, out: 4096, kW: 1, kH: 1)
  (24): nn.Threshold
  (25): nn.Dropout(0.900000)
  (26): nn.SpatialConvolutionMM(in: 4096, out: 101, kW: 1, kH: 1)
  (27): nn.View
  (28): nn.LogSoftMax
}
[0mNumber of parameters 140973285[0m	
[0m# Criterion[0m	
nn.ClassNLLCriterion
[0m# ... building optimizer[0m	
[0m# Optimizer[0m	
{
  name : [1;30m"[0m[0;32mSGD[0m[1;30m"[0m
  method : [0;35mfunction: 0x405d4378[0m
  config : 
    {
      learningRateDecay : [0;36m0[0m
      learningRate : [0;36m0.02[0m
      weightDecay : [0;36m1e-05[0m
      momentum : [0;36m0.6[0m
    }
  state : 
    {
      evalCounter : [0;36m0[0m
    }
}
[0m
# ... test model[0m	
[0m: 0% done [0m	[0m00:23:36 left[0m	
[0m: 5% done [0m	[0m00:07:00 left[0m	
[0m: 10% done [0m	[0m00:06:35 left[0m	
[0m: 15% done [0m	[0m00:06:14 left[0m	
[0m: 20% done [0m	[0m00:05:54 left[0m	
[0m: 25% done [0m	[0m00:05:30 left[0m	
[0m: 30% done [0m	[0m00:05:08 left[0m	
[0m: 35% done [0m	[0m00:04:46 left[0m	
[0m: 40% done [0m	[0m00:04:24 left[0m	
[0m: 45% done [0m	[0m00:04:03 left[0m	
[0m: 50% done [0m	[0m00:03:41 left[0m	
[0m: 55% done [0m	[0m00:03:19 left[0m	
[0m: 60% done [0m	[0m00:02:57 left[0m	
[0m: 65% done [0m	[0m00:02:35 left[0m	
[0m: 70% done [0m	[0m00:02:13 left[0m	
[0m: 75% done [0m	[0m00:01:51 left[0m	
[0m: 80% done [0m	[0m00:01:29 left[0m	
[0m: 85% done [0m	[0m00:01:07 left[0m	
[0m: 90% done [0m	[0m00:00:45 left[0m	
[0m: 95% done [0m	[0m00:00:24 left[0m	
[0m: 100% done [0m	[0m00:00:02 left[0m	
[0m: Time to test all samples = 00:07:17[0m	
[0m# Confusion Matrix[0m	
[0m: average row correct: 1.1815000025758%[0m	
[0m: average rowUcol correct (VOC measure): 0.29325842059743%[0m	
[0m: > global correct: 1.1841163187751%[0m	
[0m
#####################[0m	
[0m# Epoch nÂ° 1[0m	
[0m
# ... train model[0m	
[0m.:. Batch 1 to 128 on 72328 images[0m	
[0m: 1% done[0m	[0m01:13:01 left[0m	
[0m.:. Batch 3201 to 3328 on 72328 images[0m	
[0m: 6% done[0m	[0m01:09:12 left[0m	
[0m.:. Batch 6785 to 6912 on 72328 images[0m	
[0m: 11% done[0m	[0m01:05:42 left[0m	
[0m.:. Batch 10497 to 10624 on 72328 images[0m	
[0m: 16% done[0m	[0m01:02:04 left[0m	
[0m.:. Batch 14081 to 14208 on 72328 images[0m	
[0m: 21% done[0m	[0m00:58:19 left[0m	
