[0m# ... lunching using pid = 8117[0m	
[0m# ... loading seed in ./sk6-1/seed.save[0m	
[0m# ... switching to CUDA[0m	
[0m# ... loading Dataset[0m	
[0m# ...reloading previously trained model[0m	
[0m# Model[0m	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> (19) -> (20) -> (21) -> (22) -> (23) -> (24) -> (25) -> (26) -> (27) -> (28) -> output]
  (1): nn.SpatialConvolution(in: 3, out: 96, kW: 7, kH: 7, dW: 2, dH: 2)
  (2): nn.Threshold
  (3): nn.SpatialMaxPooling(kW: 3, kH: 3, dW: 3, dH: 3)
  (4): nn.SpatialConvolutionMM(in: 96, out: 256, kW: 7, kH: 7)
  (5): nn.Threshold
  (6): nn.SpatialMaxPooling(kW: 2, kH: 2, dW: 2, dH: 2)
  (7): nn.SpatialZeroPadding(l=1,r=1,t=1,b=1)
  (8): nn.SpatialConvolutionMM(in: 256, out: 512, kW: 3, kH: 3)
  (9): nn.Threshold
  (10): nn.SpatialZeroPadding(l=1,r=1,t=1,b=1)
  (11): nn.SpatialConvolutionMM(in: 512, out: 512, kW: 3, kH: 3)
  (12): nn.Threshold
  (13): nn.SpatialZeroPadding(l=1,r=1,t=1,b=1)
  (14): nn.SpatialConvolutionMM(in: 512, out: 1024, kW: 3, kH: 3)
  (15): nn.Threshold
  (16): nn.SpatialZeroPadding(l=1,r=1,t=1,b=1)
  (17): nn.SpatialConvolutionMM(in: 1024, out: 1024, kW: 3, kH: 3)
  (18): nn.Threshold
  (19): nn.SpatialMaxPooling(kW: 3, kH: 3, dW: 3, dH: 3)
  (20): nn.SpatialConvolutionMM(in: 1024, out: 4096, kW: 5, kH: 5)
  (21): nn.Threshold
  (22): nn.Dropout(0.900000)
  (23): nn.SpatialConvolutionMM(in: 4096, out: 4096, kW: 1, kH: 1)
  (24): nn.Threshold
  (25): nn.Dropout(0.900000)
  (26): nn.SpatialConvolutionMM(in: 4096, out: 101, kW: 1, kH: 1)
  (27): nn.View
  (28): nn.LogSoftMax
}
[0mNumber of parameters 140973285[0m	
[0m# Criterion[0m	
nn.ClassNLLCriterion
[0m# ... building optimizer[0m	
[0m# ...reloading previously trained optimfunc.state[0m	
[0m# Optimizer[0m	
{
  name : [1;30m"[0m[0;32mADAGRAD[0m[1;30m"[0m
  method : [0;35mfunction: 0x40aa3b98[0m
  config : 
    {
      learningRate : [0;36m0.003[0m
    }
  state : {...}
}
[0m
#####################[0m	
[0m# Epoch nÂ° 1[0m	
[0m
# ... train model[0m	
[0m.:. Batch 1 to 128 on 72328 images[0m	
[0m: 1% done[0m	[0m01:15:11 left[0m	
[0m.:. Batch 3201 to 3328 on 72328 images[0m	
[0m: 6% done[0m	[0m01:11:01 left[0m	
[0m.:. Batch 6785 to 6912 on 72328 images[0m	
[0m: 11% done[0m	[0m01:07:12 left[0m	
[0m.:. Batch 10497 to 10624 on 72328 images[0m	
[0m: 16% done[0m	[0m01:03:17 left[0m	
[0m.:. Batch 14081 to 14208 on 72328 images[0m	
[0m: 21% done[0m	[0m00:59:38 left[0m	
[0m.:. Batch 17665 to 17792 on 72328 images[0m	
[0m: 26% done[0m	[0m00:56:22 left[0m	
[0m.:. Batch 21249 to 21376 on 72328 images[0m	
[0m: 31% done[0m	[0m00:52:48 left[0m	
[0m.:. Batch 24961 to 25088 on 72328 images[0m	
[0m: 36% done[0m	[0m00:49:10 left[0m	
[0m.:. Batch 28545 to 28672 on 72328 images[0m	
[0m: 41% done[0m	[0m00:45:20 left[0m	
[0m.:. Batch 32129 to 32256 on 72328 images[0m	
[0m: 46% done[0m	[0m00:41:44 left[0m	
[0m.:. Batch 35841 to 35968 on 72328 images[0m	
[0m: 51% done[0m	[0m00:37:58 left[0m	
[0m.:. Batch 39425 to 39552 on 72328 images[0m	
[0m: 56% done[0m	[0m00:34:02 left[0m	
[0m.:. Batch 43009 to 43136 on 72328 images[0m	
[0m: 61% done[0m	[0m00:30:18 left[0m	
[0m.:. Batch 46721 to 46848 on 72328 images[0m	
[0m: 66% done[0m	[0m00:26:30 left[0m	
[0m.:. Batch 50305 to 50432 on 72328 images[0m	
[0m: 71% done[0m	[0m00:22:34 left[0m	
[0m.:. Batch 53889 to 54016 on 72328 images[0m	
[0m: 76% done[0m	[0m00:18:45 left[0m	
[0m.:. Batch 57473 to 57600 on 72328 images[0m	
[0m: 81% done[0m	[0m00:14:58 left[0m	
[0m.:. Batch 61185 to 61312 on 72328 images[0m	
[0m: 86% done[0m	[0m00:11:09 left[0m	
[0m.:. Batch 64769 to 64896 on 72328 images[0m	
[0m: 91% done[0m	[0m00:07:10 left[0m	
[0m.:. Batch 68353 to 68480 on 72328 images[0m	
[0m: 96% done[0m	[0m00:03:18 left[0m	
[0m.:. Batch 72065 to 72192 on 72328 images[0m	
[0m.:. End of Epoch nÂ° 1[0m	
[0m: Real time to learn 1 batch = 00:00:08[0m	
[0m: Real time to learn full batch = 01:17:49[0m	
[0m# Confusion Matrix[0m	
[0m: average row correct: 2.4962230695015%[0m	
[0m: average rowUcol correct (VOC measure): 1.1362193477349%[0m	
[0m: > global correct: 2.5204623382369%[0m	
[0m
# ... test model[0m	
[0m: 0% done [0m	[0m00:24:40 left[0m	
[0m: 5% done [0m	[0m00:06:53 left[0m	
[0m: 10% done [0m	[0m00:06:44 left[0m	
[0m: 15% done [0m	[0m00:06:27 left[0m	
[0m: 20% done [0m	[0m00:06:05 left[0m	
[0m: 25% done [0m	[0m00:05:43 left[0m	
[0m: 30% done [0m	[0m00:05:21 left[0m	
[0m: 35% done [0m	[0m00:04:59 left[0m	
[0m: 40% done [0m	[0m00:04:37 left[0m	
[0m: 45% done [0m	[0m00:04:14 left[0m	
[0m: 50% done [0m	[0m00:03:51 left[0m	
[0m: 55% done [0m	[0m00:03:28 left[0m	
[0m: 60% done [0m	[0m00:03:05 left[0m	
[0m: 65% done [0m	[0m00:02:42 left[0m	
[0m: 70% done [0m	[0m00:02:20 left[0m	
[0m: 75% done [0m	[0m00:01:57 left[0m	
[0m: 80% done [0m	[0m00:01:34 left[0m	
[0m: 85% done [0m	[0m00:01:11 left[0m	
[0m: 90% done [0m	[0m00:00:48 left[0m	
[0m: 95% done [0m	[0m00:00:25 left[0m	
[0m: 100% done [0m	[0m00:00:02 left[0m	
[0m: Time to test all samples = 00:07:41[0m	
[0m# Confusion Matrix[0m	
[0m: average row correct: 3.0703127259702%[0m	
[0m: average rowUcol correct (VOC measure): 0.85700362307564%[0m	
[0m: > global correct: 3.1007324998623%[0m	
[0m# ... saving model to ./sk6-2/model.net[0m	
[0m: tac = 22.554229974747 sec[0m	
[0m# ... saving optimfunc.state to ./sk6-2/optim.state[0m	
[0m: tac = 43.369812011719 sec[0m	
[0m# ... saving optimfunc.method to ./sk6-2/optim.method[0m	
[0m: tac = 43.424324989319 sec[0m	
[0m
#####################[0m	
[0m# Epoch nÂ° 2[0m	
[0m
# ... train model[0m	
[0m.:. Batch 1 to 128 on 72328 images[0m	
[0m: 1% done[0m	[0m01:21:24 left[0m	
[0m.:. Batch 3201 to 3328 on 72328 images[0m	
[0m: 6% done[0m	[0m01:15:23 left[0m	
[0m.:. Batch 6785 to 6912 on 72328 images[0m	
[0m: 11% done[0m	[0m01:10:22 left[0m	
[0m.:. Batch 10497 to 10624 on 72328 images[0m	
[0m: 16% done[0m	[0m01:06:09 left[0m	
[0m.:. Batch 14081 to 14208 on 72328 images[0m	
[0m: 21% done[0m	[0m01:02:04 left[0m	
[0m.:. Batch 17665 to 17792 on 72328 images[0m	
[0m: 26% done[0m	[0m00:58:18 left[0m	
[0m.:. Batch 21249 to 21376 on 72328 images[0m	
[0m: 31% done[0m	[0m00:54:20 left[0m	
[0m.:. Batch 24961 to 25088 on 72328 images[0m	
[0m: 36% done[0m	[0m00:50:23 left[0m	
[0m.:. Batch 28545 to 28672 on 72328 images[0m	
[0m: 41% done[0m	[0m00:46:16 left[0m	
[0m.:. Batch 32129 to 32256 on 72328 images[0m	
[0m: 46% done[0m	[0m00:42:17 left[0m	
[0m.:. Batch 35841 to 35968 on 72328 images[0m	
[0m: 51% done[0m	[0m00:38:28 left[0m	
[0m.:. Batch 39425 to 39552 on 72328 images[0m	
[0m: 56% done[0m	[0m00:34:28 left[0m	
[0m.:. Batch 43009 to 43136 on 72328 images[0m	
[0m: 61% done[0m	[0m00:30:40 left[0m	
[0m.:. Batch 46721 to 46848 on 72328 images[0m	
[0m: 66% done[0m	[0m00:26:45 left[0m	
[0m.:. Batch 50305 to 50432 on 72328 images[0m	
[0m: 71% done[0m	[0m00:22:44 left[0m	
[0m.:. Batch 53889 to 54016 on 72328 images[0m	
[0m: 76% done[0m	[0m00:18:53 left[0m	
[0m.:. Batch 57473 to 57600 on 72328 images[0m	
[0m: 81% done[0m	[0m00:15:03 left[0m	
[0m.:. Batch 61185 to 61312 on 72328 images[0m	
[0m: 86% done[0m	[0m00:11:14 left[0m	
[0m.:. Batch 64769 to 64896 on 72328 images[0m	
[0m: 91% done[0m	[0m00:07:12 left[0m	
[0m.:. Batch 68353 to 68480 on 72328 images[0m	
[0m: 96% done[0m	[0m00:03:20 left[0m	
[0m.:. Batch 72065 to 72192 on 72328 images[0m	
[0m.:. End of Epoch nÂ° 2[0m	
[0m: Real time to learn 1 batch = 00:00:08[0m	
[0m: Real time to learn full batch = 01:18:19[0m	
[0m# Confusion Matrix[0m	
[0m: average row correct: 4.3489852464887%[0m	
[0m: average rowUcol correct (VOC measure): 1.8993644568248%[0m	
[0m: > global correct: 4.3800464550382%[0m	
[0m
# ... test model[0m	
[0m: 0% done [0m	[0m00:24:54 left[0m	
[0m: 5% done [0m	[0m00:06:51 left[0m	
[0m: 10% done [0m	[0m00:06:42 left[0m	
[0m: 15% done [0m	[0m00:06:24 left[0m	
[0m: 20% done [0m	[0m00:06:04 left[0m	
[0m: 25% done [0m	[0m00:05:44 left[0m	
[0m: 30% done [0m	[0m00:05:22 left[0m	
[0m: 35% done [0m	[0m00:04:59 left[0m	
[0m: 40% done [0m	[0m00:04:36 left[0m	
[0m: 45% done [0m	[0m00:04:14 left[0m	
[0m: 50% done [0m	[0m00:03:51 left[0m	
[0m: 55% done [0m	[0m00:03:28 left[0m	
[0m: 60% done [0m	[0m00:03:05 left[0m	
[0m: 65% done [0m	[0m00:02:42 left[0m	
[0m: 70% done [0m	[0m00:02:19 left[0m	
[0m: 75% done [0m	[0m00:01:56 left[0m	
[0m: 80% done [0m	[0m00:01:33 left[0m	
[0m: 85% done [0m	[0m00:01:11 left[0m	
[0m: 90% done [0m	[0m00:00:48 left[0m	
[0m: 95% done [0m	[0m00:00:25 left[0m	
[0m: 100% done [0m	[0m00:00:02 left[0m	
[0m: Time to test all samples = 00:07:39[0m	
[0m# Confusion Matrix[0m	
[0m: average row correct: 7.8968061701312%[0m	
[0m: average rowUcol correct (VOC measure): 2.628006722483%[0m	
[0m: > global correct: 7.897780470342%[0m	
[0m# ... saving model to ./sk6-2/model.net[0m	
[0m: tac = 22.483512878418 sec[0m	
[0m# ... saving optimfunc.state to ./sk6-2/optim.state[0m	
[0m: tac = 43.378691911697 sec[0m	
[0m# ... saving optimfunc.method to ./sk6-2/optim.method[0m	
[0m: tac = 43.43629193306 sec[0m	
[0m
#####################[0m	
[0m# Epoch nÂ° 3[0m	
[0m
# ... train model[0m	
[0m.:. Batch 1 to 128 on 72328 images[0m	
[0m: 1% done[0m	[0m01:23:11 left[0m	
[0m.:. Batch 3201 to 3328 on 72328 images[0m	
[0m: 6% done[0m	[0m01:14:29 left[0m	
[0m.:. Batch 6785 to 6912 on 72328 images[0m	
[0m: 11% done[0m	[0m01:10:09 left[0m	
