[0m# ... lunching using pid = 18557[0m	
[0m# ... switching to CUDA[0m	
[0m# ... loading Dataset[0m	
[0m# ... building model[0m	
[0m# Model[0m	
nn.Sequential {
  [input -> (1) -> (2) -> (3) -> (4) -> (5) -> (6) -> (7) -> (8) -> (9) -> (10) -> (11) -> (12) -> (13) -> (14) -> (15) -> (16) -> (17) -> (18) -> (19) -> (20) -> (21) -> (22) -> (23) -> (24) -> (25) -> (26) -> (27) -> (28) -> (29) -> (30) -> output]
  (1): nn.SpatialConvolutionMM(in: 3, out: 64, kW: 3, kH: 3, padding: 3)
  (2): nn.ReLU
  (3): nn.SpatialMaxPooling(kW: 2, kH: 2, dW: 2, dH: 2)
  (4): nn.SpatialConvolutionMM(in: 64, out: 128, kW: 3, kH: 3, padding: 1)
  (5): nn.ReLU
  (6): nn.SpatialMaxPooling(kW: 2, kH: 2, dW: 2, dH: 2)
  (7): nn.SpatialConvolutionMM(in: 128, out: 256, kW: 3, kH: 3, padding: 1)
  (8): nn.ReLU
  (9): nn.SpatialConvolutionMM(in: 256, out: 256, kW: 3, kH: 3, padding: 1)
  (10): nn.ReLU
  (11): nn.SpatialMaxPooling(kW: 2, kH: 2, dW: 2, dH: 2)
  (12): nn.SpatialConvolutionMM(in: 256, out: 512, kW: 3, kH: 3, padding: 1)
  (13): nn.ReLU
  (14): nn.SpatialConvolutionMM(in: 512, out: 512, kW: 3, kH: 3, padding: 1)
  (15): nn.ReLU
  (16): nn.SpatialMaxPooling(kW: 2, kH: 2, dW: 2, dH: 2)
  (17): nn.SpatialConvolutionMM(in: 512, out: 512, kW: 3, kH: 3, padding: 1)
  (18): nn.ReLU
  (19): nn.SpatialConvolutionMM(in: 512, out: 512, kW: 3, kH: 3, padding: 1)
  (20): nn.ReLU
  (21): nn.SpatialMaxPooling(kW: 2, kH: 2, dW: 2, dH: 2)
  (22): nn.Reshape(25088)
  (23): nn.Linear(25088 -> 4096)
  (24): nn.ReLU
  (25): nn.Dropout(0.900000)
  (26): nn.Linear(4096 -> 4096)
  (27): nn.ReLU
  (28): nn.Dropout(0.900000)
  (29): nn.Linear(4096 -> 101)
  (30): nn.LogSoftMax
}
[0mNumber of parameters 129180133[0m	
[0m# Criterion[0m	
nn.ClassNLLCriterion
[0m# ... building optimizer[0m	
[0m# Optimizer[0m	
{
  name : [1;30m"[0m[0;32mADAGRAD[0m[1;30m"[0m
  method : [0;35mfunction: 0x40c7c6a0[0m
  config : 
    {
      learningRate : [0;36m0.1[0m
    }
  state : {...}
}
[0m
# ... test model[0m	
[0m: 0% done [0m	[0m00:12:32 left[0m	
[0m: 5% done [0m	[0m00:05:36 left[0m	
[0m: 10% done [0m	[0m00:05:23 left[0m	
[0m: 15% done [0m	[0m00:05:07 left[0m	
[0m: 20% done [0m	[0m00:04:50 left[0m	
[0m: 25% done [0m	[0m00:04:32 left[0m	
[0m: 30% done [0m	[0m00:04:16 left[0m	
[0m: 35% done [0m	[0m00:04:00 left[0m	
[0m: 40% done [0m	[0m00:03:41 left[0m	
[0m: 45% done [0m	[0m00:03:23 left[0m	
[0m: 50% done [0m	[0m00:03:04 left[0m	
[0m: 55% done [0m	[0m00:02:46 left[0m	
[0m: 60% done [0m	[0m00:02:27 left[0m	
[0m: 65% done [0m	[0m00:02:09 left[0m	
[0m: 70% done [0m	[0m00:01:51 left[0m	
[0m: 75% done [0m	[0m00:01:33 left[0m	
[0m: 80% done [0m	[0m00:01:15 left[0m	
[0m: 85% done [0m	[0m00:00:56 left[0m	
[0m: 90% done [0m	[0m00:00:38 left[0m	
[0m: 95% done [0m	[0m00:00:20 left[0m	
[0m: 100% done [0m	[0m00:00:01 left[0m	
[0m: Time to test all samples = 00:06:06[0m	
[0m# Confusion Matrix[0m	
[0m: average row correct: 0.99009900990099%[0m	
[0m: average rowUcol correct (VOC measure): 0.0092155493722104%[0m	
[0m: > global correct: 0.93077050173487%[0m	
[0m
#####################[0m	
[0m# Epoch nÂ° 1[0m	
[0m
# ... train model[0m	
[0m.:. Batch 1 to 128 on 72328 images[0m	
[0m: 1% done[0m	[0m01:10:52 left[0m	
[0m.:. Batch 3201 to 3328 on 72328 images[0m	
[0m: 6% done[0m	[0m01:07:44 left[0m	
